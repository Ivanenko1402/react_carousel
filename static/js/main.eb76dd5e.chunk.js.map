{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemWidth","frameSize","step","currentPosition","animationDuration","disabledValue","infinite","newPosition","moveLeft","props","images","length","setState","moveRight","changeValue","event","target","name","currentTarget","checked","value","this","className","style","width","map","image","src","alt","height","transition","transform","type","onClick","disabled","min","onChange","max","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb76dd5e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n};\n\ntype State = {\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  currentPosition: number\n  animationDuration: number;\n  disabledValue: boolean;\n  infinite: boolean;\n};\n\nclass Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    itemWidth: 130,\n    frameSize: 2,\n    step: 2,\n    currentPosition: 0,\n    animationDuration: 1000,\n    disabledValue: false,\n    infinite: false,\n  };\n\n  newPosition = 0;\n\n  moveLeft = () => {\n    const {\n      itemWidth,\n      step,\n      currentPosition,\n      frameSize,\n      infinite,\n    } = this.state;\n\n    this.newPosition = currentPosition + itemWidth * step;\n\n    if (this.newPosition > 0) {\n      this.newPosition = 0;\n\n      if (infinite) {\n        this.newPosition = -(\n          (this.props.images.length - frameSize) * itemWidth);\n      }\n    }\n\n    return this.setState({\n      currentPosition: this.newPosition,\n    });\n  };\n\n  moveRight = () => {\n    const {\n      itemWidth,\n      step,\n      currentPosition,\n      frameSize,\n      infinite,\n    } = this.state;\n\n    this.newPosition = currentPosition - itemWidth * step;\n\n    if (this.newPosition < -(\n      (this.props.images.length - frameSize) * itemWidth)) {\n      this.newPosition = -(\n        (this.props.images.length - frameSize) * itemWidth);\n\n      if (infinite) {\n        this.newPosition = 0;\n      }\n    }\n\n    return this.setState({ currentPosition: this.newPosition });\n  };\n\n  changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.name === 'infinite') {\n      return this.setState({\n        [event.target.name]: event.currentTarget.checked,\n      });\n    }\n\n    return this.setState((state) => ({\n      ...state,\n      [event.target.name]: +(event.target.value),\n    }));\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      itemWidth,\n      frameSize,\n      step,\n      currentPosition,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          {images.map(image => (\n            <li\n              key={image[6] + image[7]}\n              className=\"Carousel__list__item\"\n            >\n              <img\n                src={image}\n                alt={image}\n                className=\"Carousel__list__item__img\"\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                  transition: `transform ${animationDuration}ms`,\n                  transform: `translateX(${currentPosition}px)`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.moveLeft}\n            disabled={!infinite && this.newPosition === 0}\n          >\n            Prev\n          </button>\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            onClick={this.moveRight}\n            disabled={\n              !infinite && this.newPosition === -(\n                (images.length - frameSize) * itemWidth)\n            }\n          >\n            Next\n          </button>\n        </div>\n\n        <div className=\"panel\">\n          <label>\n            <p>Change size:</p>\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"50\"\n              onChange={this.changeValue}\n            />\n          </label>\n\n          <label>\n            <p>Show icon:</p>\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"1\"\n              max=\"5\"\n              onChange={this.changeValue}\n            />\n          </label>\n\n          <label>\n            <p>Animations speed:</p>\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min=\"0\"\n              onChange={this.changeValue}\n            />\n          </label>\n\n          <label>\n            <p>Step:</p>\n            <input\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min=\"0\"\n              max=\"10\"\n              onChange={this.changeValue}\n            />\n          </label>\n\n          <label>\n            <p>infinite:</p>\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              checked={infinite}\n              onChange={this.changeValue}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}